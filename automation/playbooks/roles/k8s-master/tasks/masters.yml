---
- name: Install libselinux as prerequisite for SELinux Ansible module
  yum:
    name: "{{item}}"
    state: latest
  loop:
    - libselinux-python
    - libsemanage-python

- name: Disable SELinux at next reboot
  selinux:
    state: disabled

- name: Set SELinux in permissive mode until the machine is rebooted
  command: setenforce 0
  ignore_errors: true
  changed_when: false


- name: Disable SELinux
  selinux:
    state: disabled


- name: Create kubernetes directories
  file:
    state: directory
    path: "{{ item }}"
    mode: 0755
  loop:
    - /etc/kubernetes
    - /etc/kubernetes/config
    - /var/lib/kubernetes/

- name: Download binaries
  get_url:
    url: "{{ item }}"
    dest: "/usr/local/bin/{{ item | basename }}"
    mode: '0755'
  loop:
    - "https://storage.googleapis.com/kubernetes-release/release/v{{ kube_version }}/bin/linux/amd64/kube-apiserver"
    - "https://storage.googleapis.com/kubernetes-release/release/v{{ kube_version }}/bin/linux/amd64/kube-controller-manager"
    - "https://storage.googleapis.com/kubernetes-release/release/v{{ kube_version }}/bin/linux/amd64/kube-scheduler"
    - "https://storage.googleapis.com/kubernetes-release/release/v{{ kube_version }}/bin/linux/amd64/kubectl"

- name: Copy systemd files  
  template:
    src: "{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
  loop: 
    - kube-controller-manager.service
    - kube-scheduler.service
    - kube-apiserver.service

- name: copy encryption-config.yaml file
  copy: 
    src: "{{ kubeconf_dir }}/encryption-config.yaml"
    dest: "{{ kube_etc_dir }}/config/encryption-config.yaml"


- name: Copy kubeconfig files
  copy:
    src: "{{ kubeconf_dir }}/{{ item }}"
    dest: "{{ kube_lib_dir }}/{{ item }}"
  loop:
    - kube-controller-manager.kubeconfig
    - kube-scheduler.kubeconfig

- name: Copy kube-scheduler.yaml
  template: 
    src: kube-scheduler.yaml.j2
    dest: "{{ kube_etc_dir }}/config/kube-scheduler.yaml"

- name: Copy certificates
  copy:
    src: "{{ ca_conf_directory }}/{{ item }}"
    dest: "{{ kube_lib_dir }}/{{ item }}"
    mode: 0640
    owner: root
    group: root
  with_items:
    - "{{ kube_certificates }}"

- meta: flush_handlers

- name: Enable and start services
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop: 
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
